# vim: ts=4:sw=4
#   entity=(value)
#   macro={ (expression) }
# Note:
#   - OK, this one is really ugly :-(
#   - works fine for basic cases but gets super-weird for arrays|hashes
#   - the \ char could be dropped but we'd still need quote-delimiters for strings
#   - main advantage: forward-compatible with current *.properties files

# strings
newFile=New File
close=Close

# parameters
luckyNum=Your lucky number is: {{num}}
signedIn=You're signed in as {{login}}

# attributes
nameInput.placeholder=Write your name
nameInput.title=You can give us your nickname if you prefer

# attributes, compact variant
nameInput={                                              \
    placeholder: "Write your name",                      \
    title: "You can give us your nickname if you prefer" \
}

# content + attributes
buttonClick=Click me
buttonClick.info={{buttonClick.title}}
buttonClick.title=use Ctrl+{{buttonClick.accesskey}}
buttonClick.accesskey=c

# content + attributes, compact variant
buttonClick={                         \
    ~: "Click me",                    \
    info: "{{.title}}",               \
    title: "use Ctrl+{{.accesskey}}", \
    accesskey: "c"                    \
}

# arrays
drinks[num]=[    \
    "Coca Cola", \
    "Gatorade",  \
    "Water"      \
]

# lists
cookie[form]={      \
    one: "Cookie",  \
    many: "Cookies" \
}   

# nested lists
drinks[type,num]={                     \
    cup: { one: "Cup", many: "Cups" }, \
    pot: { one: "Pot", many: "Pots" }  \
}

# macros
plural(n)={ n == 1 ? 'one' : 'many' }
drinks[plural(count)]={         \
    one: "one download",        \
    many: "{{count}} downloads" \
}

